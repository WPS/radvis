<!--
  ~ Copyright (c) 2023 WPS - Workplace Solutions GmbH
  ~
  ~ Licensed under the EUPL, Version 1.2 or as soon they will be approved by the European Commission - subsequent versions of the EUPL (the "Licence");
  ~
  ~ You may not use this work except in compliance with the Licence.
  ~ You may obtain a copy of the Licence at:
  ~
  ~ https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the Licence for the specific language governing permissions and limitations under the Licence.
  -->

<assembly xmlns="http://maven.apache.org/ASSEMBLY/2.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/ASSEMBLY/2.0.0 http://maven.apache.org/xsd/assembly-2.0.0.xsd">
    <id>radvis-standalone-app</id>
    <formats>
        <!-- using zip format here because for some strange reason,
         the JAR format breaks the spring-boot classloading mechanism:
         The main class is found by Java, but the SpringBootLauncher cannot load our BackendApplication class,
         although the JAR looks exactly like the original JAR from spring-boot.
         I suspect compression and/or some "magic" bytes in the JAR(ZIP) header.
         =======
         - instead, using zip format works perfectly and can be run with java -jar ...
        -->
        <format>zip</format>
    </formats>
    <includeBaseDirectory>false</includeBaseDirectory>
    <dependencySets>
		<dependencySet>
            <includes>
                <include>de.wps.radvis:backend:jar</include>
            </includes>
            <useProjectArtifact>false</useProjectArtifact>
            <outputDirectory>/</outputDirectory>
            <unpack>true</unpack>
        </dependencySet>

        <dependencySet>
            <includes>
                <include>de.wps.radvis:frontend:tar:dist</include>
            </includes>
            <useProjectArtifact>false</useProjectArtifact>
            <outputDirectory>/BOOT-INF/classes/static/app</outputDirectory>
            <unpack>true</unpack>
        </dependencySet>
    </dependencySets>

</assembly>
